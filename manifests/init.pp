# Class: unbound
class unbound (
  String $package_name = $::unbound::params::package_name,
  String $package_ensure = $::unbound::params::package_ensure,

  String $service_name = $::unbound::params::service_name,
  String $service_ensure = $::unbound::params::service_ensure,
  Boolean $service_enable = $::unbound::params::service_enable,

  Stdlib::AbsolutePath $config_dir = $::unbound::params::config_dir,
  Stdlib::AbsolutePath $config_file = $::unbound::params::config_file,
  Stdlib::AbsolutePath $config_sub_dir = $::unbound::params::config_sub_dir,

  String $user = $::unbound::params::user,
  String $group = $::unbound::params::group,

  String $validate_cmd = $::unbound::params::validate_cmd,

  Boolean $download_root_hints = $::unbound::params::download_root_hints,
  Boolean $download_trust_anchor = $::unbound::params::download_trust_anchor,

  String $root_hints_url = $::unbound::params::root_hints_url,

  Optional[Integer[0,5]] $verbosity = undef,
  Optional[Integer] $statistics_interval = undef,
  Optional[Boolean] $statistics_cumulative = undef,
  Optional[Boolean] $extended_statistics = undef,
  Optional[Integer] $num_threads = undef,
  Optional[Integer] $port = undef,
  Optional[Array[String]] $interface = undef,
  Optional[Boolean] $interface_automatic = undef,
  Optional[Array[String]] $outgoing_interface = undef,
  Optional[Integer] $outgoing_range = undef,
  Optional[Variant[Integer, String]] $outgoing_port_permit = undef,
  Optional[Variant[Integer, String]] $outgoing_port_avoid = undef,
  Optional[Integer] $outgoing_num_tcp = undef,
  Optional[Integer] $incoming_num_tcp = undef,
  Optional[Integer] $edns_buffer_size = undef,
  Optional[Integer] $max_udp_size = undef,
  Optional[Integer] $msg_buffer_size = undef,
  Optional[Integer] $msg_cache_size = undef,
  Optional[Integer] $msg_cache_slabs = undef,
  Optional[Integer] $num_queries_per_thread = undef,
  Optional[Integer] $jostle_timeout = undef,
  Optional[Integer] $delay_close = undef,
  Optional[Integer] $so_rcvbuf = undef,
  Optional[Integer] $so_sndbuf = undef,
  Optional[Boolean] $so_reuseport = undef,
  Optional[Boolean] $ip_transparent = undef,
  Optional[Boolean] $ip_freebind = undef,
  Optional[Integer] $rrset_cache_size = undef,
  Optional[Integer] $rrset_cache_slabs = undef,
  Optional[Integer] $cache_max_ttl = undef,
  Optional[Integer] $cache_min_ttl = undef,
  Optional[Integer] $cache_max_negative_ttl = undef,
  Optional[Integer] $infra_host_ttl = undef,
  Optional[Integer] $infra_cache_slabs = undef,
  Optional[Integer] $infra_cache_numhosts = undef,
  Optional[Integer] $infra_cache_min_rtt = undef,
  Optional[Array[String]] $define_tag = undef,
  Optional[Boolean] $do_ip4 = undef,
  Optional[Boolean] $do_ip6 = undef,
  Optional[Boolean] $prefer_ip6 = undef,
  Optional[Boolean] $do_udp = undef,
  Optional[Boolean] $do_tcp = undef,
  Optional[Integer] $tcp_mss = undef,
  Optional[Integer] $outgoing_tcp_mss = undef,
  Optional[Boolean] $tcp_upstream = undef,
  Optional[Boolean] $ssl_upstream = undef,
  Optional[Stdlib::Absolutepath] $ssl_service_key = undef,
  Optional[Stdlib::Absolutepath] $ssl_service_pem = undef,
  Optional[Integer] $ssl_port = undef,
  Optional[Boolean] $use_systemd = undef,
  Optional[Boolean] $do_daemonize = undef,
  Optional[Hash[String, String]] $access_control = undef,
  Optional[Hash[String, Array]] $access_control_tag = undef,
  Optional[Hash[String, Array[String, 2, 2]]] $access_control_tag_action = undef,
  Optional[Hash[String, Array[String, 2, 2]]] $access_control_tag_data = undef,
  Optional[Hash[String, String]] $access_control_view = undef,
  Optional[Stdlib::Absolutepath] $chroot = undef,
  Optional[Stdlib::Absolutepath] $directory = undef,
  Optional[Stdlib::Absolutepath] $logfile = undef,
  Optional[Boolean] $use_syslog = undef,
  Optional[String] $log_identity = undef,
  Optional[Boolean] $log_time_ascii = undef,
  Optional[Boolean] $log_queries = undef,
  Optional[Boolean] $log_replies = undef,
  Optional[Stdlib::Absolutepath] $pidfile = undef,
  Optional[Stdlib::Absolutepath] $root_hints = undef,
  Optional[Boolean] $hide_identity = undef,
  Optional[String] $identity = undef,
  Optional[Boolean] $hide_version = undef,
  Optional[String] $version = undef,
  Optional[Array[Integer]] $target_fetch_policy = undef,
  Optional[Boolean] $harden_short_bufsize = undef,
  Optional[Boolean] $harden_large_queries = undef,
  Optional[Boolean] $harden_glue = undef,
  Optional[Boolean] $harden_dnssec_stripped = undef,
  Optional[Boolean] $harden_below_nxdomain = undef,
  Optional[Boolean] $harden_referral_path = undef,
  Optional[Boolean] $harden_algo_downgrade = undef,
  Optional[Boolean] $use_caps_for_id = undef,
  Optional[String] $caps_whitelist = undef,
  Optional[Boolean] $qname_minimisation = undef,
  Optional[Boolean] $qname_minimisation_strict = undef,
  Optional[String] $private_address = undef,
  Optional[String] $private_domain = undef,
  Optional[Integer] $unwanted_reply_threshold = undef,
  Optional[String] $do_not_query_address = undef,
  Optional[Boolean] $do_not_query_localhost = undef,
  Optional[Boolean] $prefetch = undef,
  Optional[Boolean] $prefetch_key = undef,
  Optional[Boolean] $rrset_roundrobin = undef,
  Optional[Boolean] $minimal_responses = undef,
  Optional[Boolean] $disable_dnssec_lame_check = undef,
  Optional[Array[String]] $module_config = undef,
  Optional[Stdlib::Absolutepath] $trust_anchor_file = undef,
  Optional[Stdlib::Absolutepath] $auto_trust_anchor_file = undef,
  Optional[Array[String]] $trust_anchor = undef,
  Optional[Array[Stdlib::Absolutepath]] $trusted_keys_file = undef,
  Optional[Stdlib::Absolutepath] $dlv_anchor_file = undef,
  Optional[Array[String]] $dlv_anchor = undef,
  Optional[Array[String]] $domain_insecure = undef,
  Optional[String] $val_override_date = undef,
  Optional[Integer] $val_sig_skew_min = undef,
  Optional[Integer] $val_sig_skew_max = undef,
  Optional[Integer] $val_bogus_ttl = undef,
  Optional[Boolean] $val_clean_additional = undef,
  Optional[Integer] $val_log_level = undef,
  Optional[Boolean] $val_permissive_mode = undef,
  Optional[Boolean] $ignore_cd_flag = undef,
  Optional[Boolean] $serve_expired = undef,
  Optional[Array] $val_nsec3_keysize_iterations = undef,
  Optional[Integer] $add_holddown = undef,
  Optional[Integer] $del_holddown = undef,
  Optional[Integer] $keep_missing = undef,
  Optional[Boolean] $permit_small_holddown = undef,
  Optional[Integer] $key_cache_size = undef,
  Optional[Integer] $key_cache_slabs = undef,
  Optional[Integer] $neg_cache_size = undef,
  Optional[Boolean] $unblock_lan_zones = undef,
  Optional[Boolean] $insecure_lan_zones = undef,
  Optional[Hash[String, String]] $local_zone = undef,
  Optional[Array] $local_data = undef,
  Optional[Hash[String, String]] $local_data_ptr = undef,
  Optional[Hash[String, String]] $local_zone_tag = undef,
  Optional[Hash[String, Array[String, 2, 2]]] $local_zone_override = undef,
  Optional[Integer] $ratelimit = undef,
  Optional[String] $ratelimit_size = undef,
  Optional[Integer] $ratelimit_slabs = undef,
  Optional[Integer] $ratelimit_factor = undef,
  Optional[Hash[String, Integer]] $ratelimit_for_domain = undef,
  Optional[Hash[String, Integer]] $ratelimit_below_domain = undef,
  Optional[Integer] $ip_ratelimit = undef,
  Optional[String] $ip_ratelimit_size = undef,
  Optional[Integer] $ip_ratelimit_slabs = undef,
  Optional[Integer] $ip_ratelimit_factor = undef,

  Optional[Boolean] $control_enable = undef,
  Optional[Array[String]] $control_interface = undef,
  Optional[Integer] $control_port = undef,
  Optional[Boolean] $control_use_cert = undef,
  Optional[Stdlib::Absolutepath] $server_key_file = undef,
  Optional[String] $server_key_content = undef,
  Optional[String] $server_key_source = undef,
  Optional[Stdlib::Absolutepath] $server_cert_file = undef,
  Optional[String] $server_cert_content = undef,
  Optional[String] $server_cert_source = undef,
  Optional[Stdlib::Absolutepath] $control_key_file = undef,
  Optional[String] $control_key_content = undef,
  Optional[String] $control_key_source = undef,
  Optional[Stdlib::Absolutepath] $control_cert_file = undef,
  Optional[String] $control_cert_content = undef,
  Optional[String] $control_cert_source = undef,

  Optional[Stdlib::Absolutepath] $python_script = undef,

  Optional[Array] $dns64_prefix = undef,
  Optional[Boolean] $dns64_synthall = undef,

  Hash $stub_zones = {},
  Hash $forward_zones = {},
  Hash $views = {},
) inherits unbound::params {
  contain unbound::install
  contain unbound::config
  contain unbound::service

  Class['unbound::install']
  -> Class['unbound::config']
  ~> Class['unbound::service']
}
